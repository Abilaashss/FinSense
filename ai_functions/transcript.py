# -*- coding: utf-8 -*-
"""Untitled25.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1huAZ5Mj-aMDhcPxm1KbXpkp_eXTwWJdx
"""

import torch
import torchaudio
import moviepy.editor as mp
from transformers import AutoProcessor, AutoModelForSpeechSeq2Seq

# Load the Whisper model from Hugging Face
processor = AutoProcessor.from_pretrained("openai/whisper-medium")
model = AutoModelForSpeechSeq2Seq.from_pretrained("openai/whisper-medium").to("cuda" if torch.cuda.is_available() else "cpu")

def extract_audio(mp4_path, audio_path="temp_audio.wav"):
    """Extracts audio from an MP4 file and saves it as WAV."""
    video = mp.VideoFileClip(mp4_path)
    video.audio.write_audiofile(audio_path, codec='pcm_s16le')
    return audio_path

def transcribe_audio(audio_path, translate=False):
    """Transcribes the audio and optionally translates it to English."""
    # Load audio
    waveform, sample_rate = torchaudio.load(audio_path)

    # Convert to 16 kHz (Whisper expects this)
    if sample_rate != 16000:
        transform = torchaudio.transforms.Resample(orig_freq=sample_rate, new_freq=16000)
        waveform = transform(waveform)

    # Process audio
    inputs = processor(waveform.squeeze().numpy(), return_tensors="pt", sampling_rate=16000)
    inputs = {k: v.to(model.device) for k, v in inputs.items()}  # Move to GPU if available

    # Transcription
    with torch.no_grad():
        predicted_ids = model.generate(**inputs)

    text = processor.batch_decode(predicted_ids, skip_special_tokens=True)[0]

    if translate:
        # Translate to English
        print("Translating to English...")
        with torch.no_grad():
            predicted_ids_translated = model.generate(**inputs, task="translate")
        translated_text = processor.batch_decode(predicted_ids_translated, skip_special_tokens=True)[0]
        return text, translated_text

    return text, None

def main(mp4_path):
    audio_path = extract_audio(mp4_path)
    text, translated_text = transcribe_audio(audio_path, translate=True)  # Enable translation

    print("\nOriginal Transcription:")
    print(text)

    if translated_text:
        print("\nTranslated to English:")
        print(translated_text)

# Upload MP4 File in Colab
from google.colab import files
uploaded = files.upload()  # Upload your video file

mp4_file = list(uploaded.keys())[0]  # Get the uploaded file name
main(mp4_file)

